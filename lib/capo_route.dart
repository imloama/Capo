// GENERATED CODE - DO NOT MODIFY MANUALLY
// **************************************************************************
// Auto generated by https://github.com/fluttercandies/ff_annotation_route
// **************************************************************************

import 'package:flutter/widgets.dart';

import 'modules/settings/home/setting_page.dart';
import 'modules/settings/settings_modules/dark_mode/setting_dark_mode_page.dart';
import 'modules/settings/settings_modules/language/setting_language_page.dart';
import 'modules/settings/settings_modules/about/about_page.dart';
import 'modules/settings/settings_modules/node_settings/node_settings_page.dart';
import 'modules/settings/settings_modules/node_settings/view/readonly/readonly_page.dart';
import 'modules/settings/settings_modules/node_settings/view/validator/validator_page.dart';
import 'modules/settings/settings_modules/wallet/detail/export/export_private_key_page.dart';
import 'modules/settings/settings_modules/wallet/detail/export/export_mnemonic_page.dart';
import 'modules/settings/settings_modules/wallet/detail/wallet_detail_page.dart';
import 'modules/settings/settings_modules/wallet/wallet_settings_page.dart';
import 'modules/tabbar/tabbar.dart';
import 'modules/balance/receive/view/receive_page.dart';
import 'modules/balance/send/view/send_page.dart';
import 'modules/transactions/transactions_page.dart';
import 'modules/transactions/detail/transaction_detail_page.dart';
import 'modules/wallet/guide/guide_page.dart';
import 'modules/wallet/backup/show/show_mnemonic_page.dart';
import 'modules/wallet/backup/tip/backup_tips_page.dart';
import 'modules/wallet/backup/check/view/check_mnemonic_page.dart';
import 'modules/wallet/create/view/create_wallet_page.dart';
import 'modules/wallet/restore/restore_wallet_page.dart';

RouteResult getRouteResult({String pageUrl}) {
  pageUrl = pageUrl ?? "";
  Uri uri = Uri.parse(pageUrl);
  String routeUrl = uri.scheme + "://" + uri.host + uri.path;
  switch (routeUrl) {
    case "capo://icapo.app/balance/receive":
      return RouteResult(
        widget: ReceivePage(),
      );
    case "capo://icapo.app/balance/send":
      return RouteResult(
        widget: SendPage(),
      );
    case "capo://icapo.app/settings":
      return RouteResult(
        widget: SettingsPage(),
      );
    case "capo://icapo.app/settings/about":
      return RouteResult(
        widget: CapoAboutPage(),
      );
    case "capo://icapo.app/settings/dark_mode":
      return RouteResult(
        widget: SettingDarkModePage(),
      );
    case "capo://icapo.app/settings/language":
      return RouteResult(
        widget: SettingLanguagePage(),
      );
    case "capo://icapo.app/settings/node_settings":
      return RouteResult(
        widget: NodeSettings(),
      );
    case "capo://icapo.app/settings/node_settings/readonly":
      return RouteResult(
        widget: NodeSettingReadonlyPage(),
      );
    case "capo://icapo.app/settings/node_settings/validator":
      return RouteResult(
        widget: NodeSettingValidatorPage(),
      );
    case "capo://icapo.app/settings/wallets":
      return RouteResult(
        widget: SettingsWalletsPage(),
      );
    case "capo://icapo.app/settings/wallets/detail":
      return RouteResult(
        widget: WalletDetailPage(),
      );
    case "capo://icapo.app/settings/wallets/detail/export_mnemonic":
      return RouteResult(
        widget: ExportMnemonicPage(),
      );
    case "capo://icapo.app/settings/wallets/detail/export_private_key":
      return RouteResult(
        widget: ExportPrivateKeyPage(),
      );
    case "capo://icapo.app/tabbar":
      return RouteResult(
        widget: BottomTabBar(),
        pageRouteType: PageRouteType.transparent,
      );
    case "capo://icapo.app/transactions":
      return RouteResult(
        widget: TransactionsPage(),
      );
    case "capo://icapo.app/transactions/detail":
      return RouteResult(
        widget: TransactionDetail(),
      );
    case "capo://icapo.app/wallet/backup/check":
      return RouteResult(
        widget: CheckMnemonicPage(),
      );
    case "capo://icapo.app/wallet/backup/show":
      return RouteResult(
        widget: ShowMnemonicPage(),
      );
    case "capo://icapo.app/wallet/backup/tip":
      return RouteResult(
        widget: BackupTipsPage(),
      );
    case "capo://icapo.app/wallet/create":
      return RouteResult(
        widget: CreateWalletPage(),
      );
    case "capo://icapo.app/wallet/guide":
      return RouteResult(
        widget: CreateWalletGuidePage(),
      );
    case "capo://icapo.app/wallet/restore":
      return RouteResult(
        widget: TabBarDemo(),
      );
    default:
      return RouteResult();
  }
}

class RouteResult {
  /// The Widget return base on route
  final Widget widget;

  /// Whether show this route with status bar.
  final bool showStatusBar;

  /// The route name to track page
  final String routeName;

  /// The type of page route
  final PageRouteType pageRouteType;

  /// The description of route
  final String description;

  const RouteResult({
    this.widget,
    this.showStatusBar = true,
    this.routeName = '',
    this.pageRouteType,
    this.description = '',
  });
}

enum PageRouteType { material, cupertino, transparent }
