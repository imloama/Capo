///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class SettingsCellModel {
/*
{
  "icon": "1",
  "context": "",
  "arrow": true
}
*/

  String icon;
  String context;
  bool arrow;
  bool divideLine;
  String url;
  String iconFontFamily;

  SettingsCellModel({this.icon, this.context, this.arrow = true, this.url});
  SettingsCellModel.fromJson(Map<String, dynamic> json) {
    icon = json["icon"]?.toString();
    context = json["context"]?.toString();
    arrow = json["arrow"];
    divideLine = json["divideLine"];
    url = json["url"]?.toString();
    iconFontFamily = json["iconFontFamily"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["icon"] = icon;
    data["context"] = context;
    data["arrow"] = arrow;
    data["divideLine"] = divideLine;
    data["url"] = url;
    data["iconFontFamily"] = iconFontFamily;
    return data;
  }
}

class SettingsModel {
/*
{
  "sections": [
    [
      {
        "icon": "1",
        "context": "",
        "arrow": true
      }
    ]
  ]
}
*/

  List<List<SettingsCellModel>> sections;

  SettingsModel({
    this.sections,
  });
  SettingsModel.fromJson(Map<String, dynamic> json) {
    if (json["sections"] != null) {
      var v = json["sections"];
      var arr0 = List<List<SettingsCellModel>>();
      v.forEach((v) {
        var arr1 = List<SettingsCellModel>();
        v.forEach((v) {
          arr1.add(SettingsCellModel.fromJson(v));
        });
        arr0.add(arr1);
      });
      sections = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    if (sections != null) {
      var v = sections;
      var arr0 = List();
      v.forEach((v) {
        var arr1 = List();
        v.forEach((v) {
          arr1.add(v.toJson());
        });
        arr0.add(arr1);
      });
      data["sections"] = arr0;
    }
    return data;
  }
}
